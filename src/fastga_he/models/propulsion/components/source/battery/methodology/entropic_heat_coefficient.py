# This file is part of FAST-OAD_CS23-HE : A framework for rapid Overall Aircraft Design of Hybrid
# Electric Aircraft.
# Copyright (C) 2022 ISAE-SUPAERO

import numpy as np

import plotly.graph_objects as go

if __name__ == "__main__":

    # data from geng:2020

    state_of_charge = np.array(
        [
            0.201005025125635,
            2.311557788944728,
            4.924623115577894,
            7.236180904522619,
            8.241206030150764,
            8.844221105527645,
            9.346733668341717,
            10.75376884422110,
            13.76884422110553,
            16.28140703517588,
            18.19095477386935,
            20.80402010050252,
            22.31155778894472,
            23.61809045226130,
            25.42713567839195,
            27.63819095477387,
            28.74371859296483,
            30.15075376884422,
            31.45728643216080,
            32.56281407035175,
            33.46733668341709,
            34.87437185929649,
            37.18592964824120,
            39.2964824120603,
            41.80904522613065,
            44.42211055276382,
            47.43718592964824,
            50.55276381909547,
            52.66331658291457,
            54.9748743718593,
            56.98492462311557,
            58.49246231155779,
            59.79899497487437,
            61.00502512562814,
            62.71356783919597,
            65.22613065326632,
            68.643216080402,
            71.85929648241205,
            74.37185929648241,
            77.98994974874371,
            81.10552763819095,
            83.41708542713566,
            85.8291457286432,
            87.53768844221105,
            89.94974874371859,
            91.55778894472361,
            94.17085427135677,
            96.68341708542714,
            98.59296482412059,
        ]
    )
    entropic_heat_coefficient = np.array(
        [
            -0.22181818181818191,
            -0.3260606060606063,
            -0.3345454545454546,
            -0.31757575757575773,
            -0.2763636363636365,
            -0.23030303030303045,
            -0.17939393939393944,
            -0.12242424242424244,
            -0.11393939393939401,
            -0.1357575757575758,
            -0.13333333333333341,
            -0.1515151515151516,
            -0.18060606060606066,
            -0.2024242424242425,
            -0.18545454545454554,
            -0.16121212121212125,
            -0.1357575757575758,
            -0.08727272727272734,
            -0.040000000000000036,
            0.0036363636363636043,
            0.03636363636363632,
            0.07030303030303031,
            0.09818181818181818,
            0.12121212121212124,
            0.13333333333333336,
            0.14181818181818182,
            0.13818181818181818,
            0.12969696969696973,
            0.11757575757575761,
            0.10545454545454547,
            0.08727272727272728,
            0.06060606060606061,
            0.027878787878787892,
            -0.009696969696969704,
            -0.040000000000000036,
            -0.056969696969697003,
            -0.06060606060606061,
            -0.05818181818181822,
            -0.056969696969697003,
            -0.0630303030303031,
            -0.06787878787878787,
            -0.06787878787878787,
            -0.054545454545454564,
            -0.03151515151515155,
            -0.008484848484848484,
            0.0036363636363636043,
            0.016969696969696968,
            0.024242424242424232,
            0.04484848484848486,
        ]
    )

    valid_index = np.where(state_of_charge > 20.0)

    ehc_inter = np.polyfit(state_of_charge[valid_index], entropic_heat_coefficient[valid_index], 5)

    fig = go.Figure()
    scatter = go.Scatter(
        x=state_of_charge,
        y=entropic_heat_coefficient,
        mode="lines+markers",
        name="Data",
    )
    fig.add_trace(scatter)
    scatter_2 = go.Scatter(
        x=state_of_charge[valid_index],
        y=np.polyval(ehc_inter, state_of_charge)[valid_index],
        mode="lines+markers",
        name="Interpolated",
    )
    fig.add_trace(scatter_2)
    fig.show()

    print(ehc_inter)
