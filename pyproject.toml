[tool.poetry]
name = "FAST-OAD-CS23-HE"
version = "0.0.1"
description = "Package containing the files for the thesis : Optimization of an aircraft design problem for hybrid-electric configurations under manufacturing and certification constraints"
readme = "README.md"
authors = [
    "Florent LUTZ <Florent.LUTZ2@isae-supaero.fr>"
]
keywords = [
    "aircraft",
    "design",
    "multi-disciplinary"
]
license = "GPL-3.0-only"
homepage = "https://github.com/florentLutz/template-for-fast-contributor"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics"
]
packages = [
    { include = "fastga_he", from = "src" },
]

[tool.poetry.dependencies]
# IMPORTANT: when modifying this list, docs/requirements.txt must be updated for
# ReadTheDocs to be able to compile the documentation.
# A pre-commit hook has been added to do this task. As a result, any modification
# of poetry.lock file will modify docs/requirements.txt and make
# the commit fail because "files were modified by this hook". In that case,
# doing again the commit including changes in docs/requirements.txt will succeed.
python = "^3.10, <3.11"
fast-oad-cs23 = { git = "https://github.com/supaero-aircraft-design/FAST-GA.git", branch = "main" }
fast-oad-core = "^1.7.3"
stdatm = "^0.4.2"
networkx = "*"
pyvis = "*"
Pillow = "9.3"
kaleido = "0.2.1"
click = "8.0.4"
debugpy = "1.5.0"
lcav = {git = "https://github.com/felixpollet/LCAv.git"}

[tool.poetry.group.dev.dependencies]
pyvplm = { git = "https://github.com/florentLutz/pyvplm.git", branch = "master" }
wheel = "*"
tabula = "*"

[tool.poetry.group.test.dependencies]
pytest = "^8.0"
pytest-cov = "^5.0"
nbval = "*"

[tool.poetry.group.doc.dependencies]
sphinx = "*"
sphinx-rtd-theme = "*"
sphinxcontrib-bibtex = "*"

[tool.poetry.group.lint.dependencies]
pre-commit = "^3.5.0"
nbstripout = "^0.6.0"
ruff = "0.5.4"

[tool.poetry.plugins."fastoad.plugins"]
"cs23_he_plugin" = "fastga_he"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.ruff]
line-length = 100
target-version = "py39"
extend-include = ["*.ipynb"]
exclude = ["tests/dummy_plugins/"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"